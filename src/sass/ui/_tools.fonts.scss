///* ========================================================================
//   #FONTS
//   ======================================================================== */

// Font sizes and Spacing values are determined based on the global base font
// size and the global line height (i.e your baseline grid).
// It is not recommended that you modify these following
// variables (it can break your vertical rhythm), but if you need to, you can.

$font-size-base: round($inuit-global-font-size);
$spacing-factor: round($inuit-global-line-height);


// How many times larger/smaller than the default should our fonts be
// These should be unitless numbers

$font-size-factor-tiny:   0.6;
$font-size-factor-small:  0.8;
$font-size-factor-base: 1.0;
$font-size-factor-large:  1.5;
$font-size-factor-huge:   2.0;



// Check that the chosen font rules are pixel numbers.

@each $_inuit-font-globals in
      $inuit-global-font-size
      $inuit-global-line-height {

  @if (type-of($_inuit-font-globals) == number) {

    @if (unit($_inuit-font-globals) != "px") {
      @error "`#{$_inuit-font-globals}` needs to be a pixel value.";
    }

  } @else {
    @error "`#{$_inuit-font-globals}` needs to be a number.";
  }

}


// Check that the chosen size factors are unitless numbers.

@each $_font-size-unit in
      $font-size-factor-tiny
      $font-size-factor-small
      $font-size-factor-base
      $font-size-factor-large
      $font-size-factor-huge {

  @if (type-of($_font-size-unit) == number) {

    @if (unitless($_font-size-unit) == false) {
      @error "`#{$_font-size-unit}` needs to be unitless.";
    }

  } @else {
    @error "`#{$_font-size-unit}` needs to be a number.";
  }

}

// Private/framework-only reassignment. Do not alter anything below.

$font-size-tiny:  round($font-size-base * $font-size-factor-tiny);
$font-size-small: round($font-size-base * $font-size-factor-small);
$font-size-base: round($font-size-base * $font-size-factor-base);
$font-size-large: round($font-size-base * $font-size-factor-large);
$font-size-huge:  round($font-size-base * $font-size-factor-huge);

$spacing-unit-tiny:  round($inuit-global-spacing-unit * $inuit-global-spacing-unit-factor-tiny);
$spacing-unit-small: round($inuit-global-spacing-unit * $inuit-global-spacing-unit-factor-small);
$spacing-unit-bas: round($inuit-global-spacing-unit * $inuit-global-line-height);
$spacing-unit-large: round($inuit-global-spacing-unit * $inuit-global-spacing-unit-factor-large);
$spacing-unit-huge:  round($inuit-global-spacing-unit * $inuit-global-spacing-unit-factor-huge);